variables:
  DOCKERFILE: Dockerfile

stages:
  - build

workflow:
  rules: 
    - if: $CI_PROJECT_ID == "256" && $CI_COMMIT_REF_NAME =~ /main/
      variables:
        IMAGE_TAG: $CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_REF_NAME =~ /testVersion/
      variables:
        IMAGE_TAG: $CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_TAG
      variables:
        IMAGE_TAG: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_NAME =~ /dev/ || $CI_COMMIT_REF_NAME =~ /develop/
      variables:
        IMAGE_TAG: $CI_COMMIT_REF_NAME
    - if: $CI_COMMIT_REF_NAME =~ /master/ || $CI_COMMIT_REF_NAME =~ /release/ || $CI_COMMIT_REF_NAME =~ /main/
      variables:
        IMAGE_TAG: $CI_COMMIT_SHORT_SHA
    - when: never

build:
  stage: build
  variables:
    NUGET_USER: gitlab-ci-token
    NUGET_PASS: $CI_JOB_TOKEN
  rules:
    - if: $CI_COMMIT_REF_NAME =~ /^feature/
      when: never
    - when: on_success
  before_script:
    - echo $CI_PROJECT_ID
    - docker info
    - docker login -u $GLOBAL_REGISTRY_USER -p $GLOBAL_REGISTRY_PASS $GLOBAL_DOCKER_REGISTRY
  script:
    - docker build --build-arg NUGET_USER=$NUGET_USER --build-arg NUGET_PASS=$NUGET_PASS --build-arg CI_JOB_ID=$CI_COMMIT_SHORT_SHA --build-arg CI_TAG=$CI_COMMIT_TAG --build-arg CI_MESSAGE="$CI_COMMIT_DESCRIPTION" --build-arg CI_COMMIT_SHORT_SHA=$CI_COMMIT_SHORT_SHA --build-arg CI_COMMIT_REF_NAME=$CI_COMMIT_BRANCH  -t $GLOBAL_DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $GLOBAL_DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
